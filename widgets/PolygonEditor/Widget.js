define(["dojo/_base/declare","dojo/_base/array","dojo/_base/connect","dojo/_base/html","dojo/_base/lang","dojo/dom","dojo/dom-attr","dojo/dom-class","dojo/on","dojo/parser","dojox/widget/Toaster","dijit/_WidgetsInTemplateMixin","dijit/ConfirmDialog","dijit/form/Button","dijit/form/RadioButton","esri/Color","esri/graphic","esri/graphicsUtils","esri/undoManager","esri/dijit/editing/Add","esri/dijit/editing/Cut","esri/dijit/editing/Delete","esri/dijit/editing/Union","esri/dijit/editing/Update","esri/geometry/geometryEngine","esri/layers/FeatureLayer","esri/renderers/SimpleRenderer","esri/symbols/SimpleMarkerSymbol","esri/symbols/SimpleLineSymbol","esri/symbols/SimpleFillSymbol","esri/tasks/query","esri/toolbars/draw","esri/toolbars/edit","jimu/BaseWidget"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H){return a([H,l],{baseClass:"jimu-widget-polygoneditor",startup:function(){this.inherited(arguments),this.watch("_activeTool",function(a,b,c){var d=c?document.getElementById(c).title:null;document.getElementById("statusbar_tool").innerHTML=d?"Active tool: <strong>"+d+"</strong>":"Active tool: <strong>[none]</strong>"}),this.set("_activeTool",null),this.sq=new E,this.ds=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([128,0,128]),2),new p([128,0,128,.3])),this.ss=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([0,255,255]),3),new p([0,255,255,.3])),this.fs=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([0,0,255]),2),new p([128,128,128,.5])),this.ls=new C(C.STYLE_SOLID,new p([0,0,255]),2),this.ms=new B(B.STYLE_CIRCLE,10,new C(C.STYLE_SOLID,new p([0,0,255]),1),new p([128,128,128,.5])),this.hs=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([255,255,0]),3),new p([255,255,0,.3])),this.ws=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([255,165,0]),3),new p([255,165,0,.3])),this.es=new D(D.STYLE_SOLID,new C(C.STYLE_SOLID,new p([255,0,0]),3),new p([255,0,0,.3])),this.d=new F(this.map,{showTooltips:!1}),this.d.setFillSymbol(this.fs),this.d.setLineSymbol(this.ls),this.d.on("draw-complete",e.hitch(this,this._ddcc)),this.e=new G(this.map),this.u=new s,c.connect(this.u,"onChange",e.hitch(this,function(){g.set("UNDO","disabled",!this.u.canUndo),g.set("REDO","disabled",!this.u.canRedo)})),this.f=new z("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Military/FeatureServer/9",{mode:z.MODE_ONDEMAND,outFields:["*"]}),this.f.setRenderer(new A(this.ds)),this.f.setSelectionSymbol(this.ss),this.f.on("selection-complete",e.hitch(this,function(){this._uts()})),this.f.on("selection-clear",e.hitch(this,function(){this._uts()})),this.map.addLayer(this.f)},_sat:function(a){this._activeTool?a.currentTarget.id===this._activeTool?(this.d.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove(a.currentTarget,"active-tool")):(this.f.getSelectedFeatures().length>0&&"EDIT_RESHAPE"!==a.currentTarget.id&&this.f.getSelectedFeatures()[0].show(),this.map.graphics.clear(),this.e.deactivate(),h.remove(this._activeTool,"active-tool"),"EDIT_RESHAPE"===this._activeTool?g.set("EDIT_RESHAPE_SAVE","disabled",!0):"PASTE_COPY"===this._activeTool&&(g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)),this.map.setInfoWindowOnClick(!1),this.map.disablePan(),this._scu(a.currentTarget.value),this.d.activate(F[a.currentTarget.value]),this.set("_activeTool",a.currentTarget.id),h.add(a.currentTarget.id,"active-tool")):(this.map.setInfoWindowOnClick(!1),this.map.disablePan(),this._scu(a.currentTarget.value),this.d.activate(F[a.currentTarget.value]),this.set("_activeTool",a.currentTarget.id),h.add(a.currentTarget.id,"active-tool"))},_uts:function(){var a=this.f.getSelectedFeatures().length;document.getElementById("statusbar_selection").innerHTML="Selected features: <strong>"+a+"</strong>",g.set("SELECTION_SUBTRACT","disabled",0===a),g.set("SELECTION_CLEAR","disabled",0===a),g.set("SELECTION_ZOOM","disabled",0===a),g.set("EDIT_REMOVE","disabled",0===a),g.set("EDIT_ADD","disabled",1!==a),g.set("EDIT_SUBTRACT","disabled",0===a),g.set("EDIT_RESHAPE","disabled",1!==a),g.set("EDIT_UNION","disabled",0===a),g.set("EDIT_CUT","disabled",1!==a),g.set("PASTE_COPY","disabled",1!==a),this._activeTool&&g.get(this._activeTool,"disabled")===!0&&(this.map.graphics.clear(),this.d.deactivate(),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),h.remove(this._activeTool,"active-tool"),"EDIT_RESHAPE"===this._activeTool?g.set("EDIT_RESHAPE_SAVE","disabled",!0):"PASTE_COPY"===this._activeTool&&(g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)),this.set("_activeTool",null))},_scu:function(a){switch(a){case"RECTANGLE":this.map.setMapCursor("crosshair");break;case"POINT":this.map.setMapCursor("pointer");break;default:this.map.setMapCursor("auto")}},_cs:function(a){this.f.getSelectedFeatures().forEach(function(a){a.visible!==!0&&a.show()}),this.f.clearSelection()},_zts:function(a){this.map.setExtent(r.graphicsExtent(this.f.getSelectedFeatures()).expand(2))},_uuu:function(a){this.u.undo()},_rrr:function(a){this.u.redo()},_ddcc:function(a){switch(this._activeTool){case"SELECTION_NEW":this.sq.geometry=a.geometry,this.f.selectFeatures(this.sq,z.SELECTION_NEW);break;case"SELECTION_ADD":this.map.graphics.add(new q(a.geometry,this.ms,null,null)),setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),500),this.sq.geometry=a.geometry,this.f.selectFeatures(this.sq,z.SELECTION_ADD);break;case"SELECTION_SUBTRACT":this.map.graphics.add(new q(a.geometry,this.ms,null,null)),setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),500),this.sq.geometry=a.geometry,this.f.selectFeatures(this.sq,z.SELECTION_SUBTRACT);break;case"EDIT_CREATE":this.sq.geometry=a.geometry,this.f.queryFeatures(this.sq,e.hitch(this,function(b){var c=a.geometry;if(b.features.length>0){for(var d=y.difference(c,b.features[0].geometry),f=1;f<b.features.length&&null!==d;f++)d=y.difference(d,b.features[f].geometry);if(null===d)return this._ssmm("Polygons cannot be completely covered by other polygons.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(a.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);if(d.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(d,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);c=d,this._ssmm("Polygons must not overlap.<br><br>Overlapping area has been removed.","warning"),this.map.graphics.add(new q(y.difference(a.geometry,d),this.ws,null)),setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3)}var g=new q(c,null,null);this.f.applyEdits([g],null,null,e.hitch(this,function(){var a=new t({featureLayer:this.f,addedGraphics:[g]});this.u.add(a),0===b.features.length&&this._ssmm("Edit operation completed successfully.","message")}))}));break;case"EDIT_ADD":this.sq.geometry=a.geometry,this.f.queryFeatures(this.sq,e.hitch(this,function(b){var c=b.features.some(e.hitch(this,function(a){return a.attributes.objectid===this.f.getSelectedFeatures()[0].attributes.objectid}));if(c!==!0)return this._ssmm("The area drawn must overlap with the selected feature.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(a.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var d=new q(this.f.getSelectedFeatures()[0].toJson()),f=y.union([d.geometry,a.geometry]),g=b.features.filter(function(a){return a.attributes.objectid!==d.attributes.objectid});if(g.length>0){for(var h=y.difference(f,g[0].geometry),i=1;i<g.length;i++)h=y.difference(h,g[i].geometry);if(h.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(h,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);f=h,this._ssmm("Polygons must not overlap.<br><br>Overlapping area has been removed.","warning"),this.map.graphics.add(new q(y.difference(a.geometry,h),this.ws,null)),setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3)}var j=new q(d.toJson()).setGeometry(f);this.f.applyEdits(null,[j],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[d],postUpdatedGraphics:[j]});this.u.add(a),0===g.length&&this._ssmm("Edit operation completed successfully.","message")}))}));break;case"EDIT_SUBTRACT":this.sq.geometry=a.geometry,this.f.queryFeatures(this.sq,e.hitch(this,function(b){var c=b.features.some(e.hitch(this,function(a){return a.attributes.objectid===this.f.getSelectedFeatures()[0].attributes.objectid}));if(c!==!0)return this._ssmm("The area drawn must overlap with the selected feature.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(a.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var d=new q(this.f.getSelectedFeatures()[0].toJson()),f=y.difference(d.geometry,a.geometry);if(null==f)return this._ssmm("Orignal polygon was completely consumed.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(a.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);if(f.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(f,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var g=new q(d.toJson()).setGeometry(f);this.f.applyEdits(null,[g],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[d],postUpdatedGraphics:[g]});this.u.add(a),this._ssmm("Edit operation completed successfully.","message")}))}));break;case"EDIT_CUT":var b=new q(this.f.getSelectedFeatures()[0].toJson()),c=y.intersects(a.geometry,b.geometry);if(c!==!0)return this._ssmm("The cutting polyline must intersect the target polygon.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(a.geometry,this.es,null)),this.map.graphics.add(b.setSymbol(this.es)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var d=y.cut(b.geometry,a.geometry),f=d.find(function(a){return a.rings.length>1});if(f)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(f,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var g=new q(b.toJson()).setGeometry(d[0]),h=new q(d[1],null,null);this.f.applyEdits([h],[g],null,e.hitch(this,function(){var a=new u({featureLayer:this.f,preUpdatedGraphics:[b],postUpdatedGraphics:[g],addedGraphics:[h]});this.u.add(a),this._ssmm("Edit operation completed successfully.","message")}))}},_aet:function(a){var b=G.EDIT_VERTICES|G.MOVE|G.SCALE|G.ROTATE,c={allowAddVertices:!0,allowDeleteVertices:!0,uniformScaling:!0},d=new q(this.f.getSelectedFeatures()[0].toJson()).setSymbol(this.ss);this.map.graphics.clear(),this.map.graphics.add(d),"EDIT_RESHAPE"===a.currentTarget.id&&this.f.getSelectedFeatures()[0].hide(),this._activeTool?a.currentTarget.id===this._activeTool?("EDIT_RESHAPE"===a.currentTarget.id&&this.f.getSelectedFeatures()[0].show(),this.map.graphics.clear(),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove(a.currentTarget,"active-tool"),"EDIT_RESHAPE"===a.currentTarget.id?g.set("EDIT_RESHAPE_SAVE","disabled",!0):"PASTE_COPY"===a.currentTarget.id&&(g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0))):("EDIT_RESHAPE"!==a.currentTarget.id&&this.f.getSelectedFeatures()[0].show(),this.e.deactivate(),this.d.deactivate(),h.remove(this._activeTool,"active-tool"),"EDIT_RESHAPE"===this._activeTool?g.set("EDIT_RESHAPE_SAVE","disabled",!0):"PASTE_COPY"===this._activeTool&&(g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)),this.map.setInfoWindowOnClick(!1),this.map.disablePan(),this._scu(null),this.e.activate(b,d,c),this.set("_activeTool",a.currentTarget.id),h.add(a.currentTarget.id,"active-tool"),"EDIT_RESHAPE"===a.currentTarget.id?g.set("EDIT_RESHAPE_SAVE","disabled",!1):"PASTE_COPY"===a.currentTarget.id&&(g.set("PASTE_NEW","disabled",!1),g.set("PASTE_ADD","disabled",!1),g.set("PASTE_SUBTRACT","disabled",!1))):(this.map.setInfoWindowOnClick(!1),this.map.disablePan(),this._scu(null),this.e.activate(b,d,c),this.set("_activeTool",a.currentTarget.id),h.add(a.currentTarget.id,"active-tool"),"EDIT_RESHAPE"===a.currentTarget.id?g.set("EDIT_RESHAPE_SAVE","disabled",!1):"PASTE_COPY"===a.currentTarget.id&&(g.set("PASTE_NEW","disabled",!1),g.set("PASTE_ADD","disabled",!1),g.set("PASTE_SUBTRACT","disabled",!1)))},_srh:function(a){if(this.e.getCurrentState().isModified===!0){var b=new q(this.f.getSelectedFeatures()[0].toJson()),c=this.e.getCurrentState().graphic;this.sq.geometry=c.geometry,this.f.queryFeatures(this.sq,e.hitch(this,function(a){var d=a.features.filter(function(a){return a.attributes.objectid!==c.attributes.objectid});if(d.length>0){for(var f=y.difference(c.geometry,d[0].geometry),g=1;g<d.length&&null!==f;g++)f=y.difference(f,d[g].geometry);if(null===f)return this._ssmm("Polygons cannot be completely covered by other polygons.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(c.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.f.getSelectedFeatures()[0].show(),this.map.graphics.clear()}),2e3);if(f.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(f,this.es,null)),void setTimeout(e.hitch(this,function(){this.f.getSelectedFeatures()[0].show(),this.map.graphics.clear()}),2e3);this._ssmm("Polygons must not overlap.<br><br>Overlapping area has been removed.","warning"),this.map.graphics.add(new q(y.difference(c.geometry,f),this.ws,null)),setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3),c=c.setGeometry(f)}this.f.applyEdits(null,[c],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[b],postUpdatedGraphics:[c]});this.u.add(a),this.f.getSelectedFeatures()[0].show(),0===d.length&&(this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message"))}))}))}this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("EDIT_RESHAPE","active-tool"),g.set(a.currentTarget,"disabled",!0)},_rmf:function(a){this.c=new m({title:"Remove feature(s)",content:1===this.f.getSelectedFeatures().length?"1 feature is selected.<br>Are you sure you want to remove it?":this.f.getSelectedFeatures().length+" features are selected.<br>Are you sure you want to remove them?",closable:!1}),this.c.on("execute",e.hitch(this,function(){var a=this.f.getSelectedFeatures();this.f.applyEdits(null,null,this.f.getSelectedFeatures(),e.hitch(this,function(){var b=new v({featureLayer:this.f,deletedGraphics:a});this.u.add(b),this._ssmm("Edit operation completed successfully.","message")})),this.c.destroy()})),this.c.on("cancel",e.hitch(this,function(a){this.c.destroy()})),this.c.show()},_mgf:function(a){var b=this.f.getSelectedFeatures().map(function(a){return new q(a.toJson()).setSymbol(null)}),c=y.union(b.map(function(a){return a.geometry}));if(c.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(c,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var d=new q(b[0].toJson()).setGeometry(c);this.f.applyEdits(null,[d],b.slice(1),e.hitch(this,function(){var a=new w({featureLayer:this.f,preUpdatedGraphics:[b[0]],postUpdatedGraphics:[d],deletedGraphics:b.slice(1)});this.u.add(a),this._ssmm("Edit operation completed successfully.","message")}))},_pan:function(a){var b=this.e.getCurrentState().graphic.geometry;this.sq.geometry=b,this.f.queryFeatures(this.sq,e.hitch(this,function(a){if(a.features.length>0){for(var c=y.difference(b,a.features[0].geometry),d=1;d<a.features.length&&null!==c;d++)c=y.difference(c,a.features[d].geometry);if(null===c)return this._ssmm("Polygons cannot be completely covered by other polygons.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(b,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);if(c.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(c,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);this._ssmm("Polygons must not overlap.<br><br>Overlapping area has been removed.","warning"),this.map.graphics.add(new q(y.difference(b,c),this.ws,null)),setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3),b=c}var f=new q(b,null,null);this.f.applyEdits([f],null,null,e.hitch(this,function(){var b=new t({featureLayer:this.f,addedGraphics:[f]});this.u.add(b),0===a.features.length&&(this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message"))}))})),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("PASTE_COPY","active-tool"),g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)},_paa:function(a){var b=this.e.getCurrentState().graphic.geometry;this.sq.geometry=b,this.f.queryFeatures(this.sq,e.hitch(this,function(a){if(0===a.features.length)return this._ssmm("The area drawn must overlap with another feature.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(b,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),2e3);if(1===a.features.length){var c=new q(a.features[0].toJson()),d=y.union([c.geometry,b]),j=new q(c.toJson()).setGeometry(d);this.f.applyEdits(null,[j],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[c],postUpdatedGraphics:[j]});this.u.add(a),this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message")})),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("PASTE_COPY","active-tool"),g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)}else if(a.features.length>1){for(var k="The area to be pasted intersects with more than one feature.<br>Please select the target feature for this operation.<br>Hover over an option to see its geometry highlighted on the map.<br><br><br><form id='PASTE_ADD_FORM'>",l=0;l<a.features.length;l++)k+=0===l?"<div id='PASTE_ADD_"+l+"' style='display:table;'><input type='radio' data-dojo-type='dijit/form/RadioButton' name='PasteAsAdd' value='"+l+"' checked='checked' /><label>"+a.features[l].attributes.objectid+"</label></div><br><br>":"<div id='PASTE_ADD_"+l+"' style='display:table;'><input type='radio' data-dojo-type='dijit/form/RadioButton' name='PasteAsAdd' value='"+l+"' /><label>"+a.features[l].attributes.objectid+"</label></div><br><br>";k+="</form>",this.c=new m({title:"Paste as add",content:k,closable:!1}),this.c.on("execute",e.hitch(this,function(c){var d=document.getElementById("PASTE_ADD_FORM").elements.namedItem("PasteAsAdd").value,f=new q(a.features[d].toJson()),i=y.union([f.geometry,b]),j=a.features.filter(function(a){return a.attributes.objectid!==f.attributes.objectid});if(j.length>0){for(var k=y.difference(i,j[0].geometry),l=1;l<j.length;l++)k=y.difference(k,j[l].geometry);if(k.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(k,this.es,null)),setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),2e3),void this.c.destroy();i=k,this._ssmm("Polygons must not overlap.<br><br>Overlapping area has been removed.","warning"),this.map.graphics.add(new q(y.difference(b,k),this.ws,null)),setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3)}var m=new q(f.toJson()).setGeometry(i);this.f.applyEdits(null,[m],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[f],postUpdatedGraphics:[m]});this.u.add(a),0===j.length&&(this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message"))})),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("PASTE_COPY","active-tool"),g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0),this.c.destroy()})),this.c.on("cancel",e.hitch(this,function(a){this.c.destroy()})),this.c.show();for(var l=0;l<a.features.length;l++)i(f.byId("PASTE_ADD_"+l),"mouseover",e.hitch(this,function(b){var c=b.currentTarget.firstChild.firstChild.value,d=new q(a.features[c].geometry,this.hs,null,null);this.map.graphics.add(d)})),i(f.byId("PASTE_ADD_"+l),"mouseout",e.hitch(this,function(a){this.map.graphics.graphics.length>1&&this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}))}}))},_pas:function(a){var b=this.e.getCurrentState().graphic.geometry;this.sq.geometry=b,this.f.queryFeatures(this.sq,e.hitch(this,function(a){if(0===a.features.length)return this._ssmm("The area drawn must overlap with another feature.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(b,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),2e3);if(1===a.features.length){var c=new q(a.features[0].toJson()),d=y.difference(c.geometry,b);if(null==d)return this._ssmm("Orignal polygon was completely consumed.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(c.geometry,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);if(d.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(d,this.es,null)),void setTimeout(e.hitch(this,function(){this.map.graphics.clear()}),2e3);var j=new q(c.toJson()).setGeometry(d);this.f.applyEdits(null,[j],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[c],postUpdatedGraphics:[j]});this.u.add(a),this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message")})),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("PASTE_COPY","active-tool"),g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0)}else if(a.features.length>1){for(var k="The area to be pasted intersects with more than one feature.<br>Please select the target feature for this operation.<br>Hover over an option to see its geometry highlighted on the map.<br><br><br><form id='PASTE_SUBTRACT_FORM'>",l=0;l<a.features.length;l++)k+=0===l?"<div id='PASTE_SUBTRACT_"+l+"' style='display:table;'><input type='radio' data-dojo-type='dijit/form/RadioButton' name='PasteAsSubtract' value='"+l+"' checked='checked' /><label>"+a.features[l].attributes.objectid+"</label></div><br><br>":"<div id='PASTE_SUBTRACT_"+l+"' style='display:table;'><input type='radio' data-dojo-type='dijit/form/RadioButton' name='PasteAsSubtract' value='"+l+"' /><label>"+a.features[l].attributes.objectid+"</label></div><br><br>";k+="</form>",this.c=new m({title:"Paste as subtract",content:k,closable:!1}),this.c.on("execute",e.hitch(this,function(c){var d=document.getElementById("PASTE_SUBTRACT_FORM").elements.namedItem("PasteAsSubtract").value,f=new q(a.features[d].toJson()),i=y.difference(f.geometry,b);if(null==i)return this._ssmm("Orignal polygon was completely consumed.<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(f.geometry,this.es,null)),setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),2e3),void this.c.destroy();if(i.rings.length>1)return this._ssmm("Polygons cannot be multipart or contain holes (interior rings).<br><br>This edit operation has been canceled.","error"),this.map.graphics.add(new q(i,this.es,null)),setTimeout(e.hitch(this,function(){this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}),2e3),void this.c.destroy();var j=new q(f.toJson()).setGeometry(i);this.f.applyEdits(null,[j],null,e.hitch(this,function(){var a=new x({featureLayer:this.f,preUpdatedGraphics:[f],postUpdatedGraphics:[j]});this.u.add(a),this.map.graphics.clear(),this._ssmm("Edit operation completed successfully.","message")})),this.e.deactivate(),this._scu(null),this.map.enablePan(),this.map.setInfoWindowOnClick(!0),this.set("_activeTool",null),h.remove("PASTE_COPY","active-tool"),g.set("PASTE_NEW","disabled",!0),g.set("PASTE_ADD","disabled",!0),g.set("PASTE_SUBTRACT","disabled",!0),this.c.destroy()})),this.c.on("cancel",e.hitch(this,function(a){this.c.destroy()})),this.c.show();for(var l=0;l<a.features.length;l++)i(f.byId("PASTE_SUBTRACT_"+l),"mouseover",e.hitch(this,function(b){var c=b.currentTarget.firstChild.firstChild.value,d=new q(a.features[c].geometry,this.hs,null,null);this.map.graphics.add(d)})),i(f.byId("PASTE_SUBTRACT_"+l),"mouseout",e.hitch(this,function(a){this.map.graphics.graphics.length>1&&this.map.graphics.remove(this.map.graphics.graphics[this.map.graphics.graphics.length-1])}))}}))},_ssmm:function(a,b){this.t.setContent(a,b),this.t.show()}})});